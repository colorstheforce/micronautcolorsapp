plugins {
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.3"
}

version = "0.1"
group = "com.android.micronautcolors"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.android.micronautcolors.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("com.oracle.coherence.ce:coherence:${coherenceVersion}")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.cache:micronaut-cache-infinispan")
    implementation("io.micronaut.cassandra:micronaut-cassandra")
    implementation("io.micronaut.coherence:micronaut-coherence")
    implementation("io.micronaut.coherence:micronaut-coherence-session")
    implementation("io.micronaut.graphql:micronaut-graphql")
    implementation("io.micronaut.mongodb:micronaut-mongo-reactive")
    implementation("io.micronaut.multitenancy:micronaut-multitenancy")
    implementation("io.micronaut.oraclecloud:micronaut-oraclecloud-sdk")
    implementation("io.micronaut.redis:micronaut-redis-lettuce")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.sql:micronaut-jdbi")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mongodb")
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")

    testImplementation("org.hamcrest:hamcrest")

    testImplementation("org.mockito:mockito-core")

}


application {
    mainClass.set("com.android.micronautcolors.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}


dockerBuild {
    images = ["${System.env.DOCKER_IMAGE ?: project.name}:$project.version"]
}

dockerBuildNative {
    images = ["${System.env.DOCKER_IMAGE ?: project.name}:$project.version"]
}

